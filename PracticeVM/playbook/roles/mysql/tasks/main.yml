---
# MySQL role main tasks
- name: Update package list
  apt:
    update_cache: yes

- name: Install MySQL Server and dependencies
  apt:
    name:
      - mysql-server
      - mysql-client
      - python3-pymysql
    state: present

- name: Start and enable MySQL service
  service:
    name: mysql
    state: started
    enabled: yes

- name: Set MySQL root password
  shell: |
    # Check if root user exists and update authentication
    mysql -e "USE mysql; UPDATE user SET plugin='mysql_native_password' WHERE User='root'; FLUSH PRIVILEGES;" || true
    mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ mysql_root_password }}';" || true

- name: Create MySQL configuration file for root
  copy:
    dest: /root/.my.cnf
    content: |
      [client]
      user=root
      password={{ mysql_root_password }}
    mode: "0600"

- name: Configure MySQL to allow remote connections
  lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: "^bind-address"
    line: "bind-address = 0.0.0.0"
  notify: restart mysql

- name: Create SNS database
  mysql_db:
    name: "{{ sns_db_name }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Create SNS database user
  mysql_user:
    name: "{{ sns_db_user }}"
    password: "{{ sns_db_password }}"
    priv: "{{ sns_db_name }}.*:ALL"
    host: "{{ allowed_host }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Create users table
  mysql_query:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_db: "{{ sns_db_name }}"
    query: |
      CREATE TABLE IF NOT EXISTS users (
        id INT AUTO_INCREMENT PRIMARY KEY,
        username VARCHAR(50) UNIQUE NOT NULL,
        password_hash VARCHAR(255) NOT NULL,
        display_name VARCHAR(100) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      );

- name: Create posts table
  mysql_query:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_db: "{{ sns_db_name }}"
    query: |
      CREATE TABLE IF NOT EXISTS posts (
        id INT AUTO_INCREMENT PRIMARY KEY,
        user_id INT NOT NULL,
        content TEXT NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users(id)
      );

- name: Insert sample admin user
  mysql_query:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_db: "{{ sns_db_name }}"
    query: |
      INSERT IGNORE INTO users (username, password_hash, display_name) 
      VALUES ('admin', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'Administrator');
